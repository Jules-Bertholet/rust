error[E0277]: the size or alignment for values of type `dyn Sized` cannot be known at compilation time
  --> $DIR/aligned-fail.rs:10:46
   |
LL |     let _ = core::intrinsics::min_align_of::<dyn Sized>();
   |                                              ^^^^^^^^^ doesn't have an alignment known at compile-time
   |
   = help: the trait `Aligned` is not implemented for `dyn Sized`
note: required by a bound in `std::intrinsics::min_align_of`
  --> $SRC_DIR/core/src/intrinsics.rs:LL:COL
   |
LL |     pub fn min_align_of<T: ?Sized + Aligned>() -> usize;
   |                                     ^^^^^^^ required by this bound in `std::intrinsics::min_align_of`

error[E0038]: the trait `Sized` cannot be made into an object
  --> $DIR/aligned-fail.rs:10:46
   |
LL |     let _ = core::intrinsics::min_align_of::<dyn Sized>();
   |                                              ^^^^^^^^^ `Sized` cannot be made into an object
   |
   = note: the trait cannot be made into an object because it requires `Self: Aligned`
   = note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>

error[E0277]: the size or alignment for values of type `dyn Aligned` cannot be known at compilation time
  --> $DIR/aligned-fail.rs:13:46
   |
LL |     let _ = core::intrinsics::min_align_of::<dyn Aligned>();
   |                                              ^^^^^^^^^^^ doesn't have an alignment known at compile-time
   |
   = help: the trait `Aligned` is not implemented for `dyn Aligned`
note: required by a bound in `std::intrinsics::min_align_of`
  --> $SRC_DIR/core/src/intrinsics.rs:LL:COL
   |
LL |     pub fn min_align_of<T: ?Sized + Aligned>() -> usize;
   |                                     ^^^^^^^ required by this bound in `std::intrinsics::min_align_of`

error[E0038]: the trait `Aligned` cannot be made into an object
  --> $DIR/aligned-fail.rs:13:46
   |
LL |     let _ = core::intrinsics::min_align_of::<dyn Aligned>();
   |                                              ^^^^^^^^^^^ `Aligned` cannot be made into an object
   |
   = note: the trait cannot be made into an object because it requires `Self: Aligned`
   = note: for a trait to be "object safe" it needs to allow building a vtable to allow the call to be resolvable dynamically; for more information visit <https://doc.rust-lang.org/reference/items/traits.html#object-safety>

error[E0277]: the size or alignment for values of type `(dyn Send + 'static)` cannot be known at compilation time
  --> $DIR/aligned-fail.rs:16:46
   |
LL |     let _ = core::intrinsics::min_align_of::<Test>();
   |                                              ^^^^ doesn't have an alignment known at compile-time
   |
   = help: within `Test`, the trait `Aligned` is not implemented for `(dyn Send + 'static)`
note: required because it appears within the type `Test`
  --> $DIR/aligned-fail.rs:5:8
   |
LL | struct Test {
   |        ^^^^
note: required by a bound in `std::intrinsics::min_align_of`
  --> $SRC_DIR/core/src/intrinsics.rs:LL:COL
   |
LL |     pub fn min_align_of<T: ?Sized + Aligned>() -> usize;
   |                                     ^^^^^^^ required by this bound in `std::intrinsics::min_align_of`

error: aborting due to 5 previous errors

Some errors have detailed explanations: E0038, E0277.
For more information about an error, try `rustc --explain E0038`.
